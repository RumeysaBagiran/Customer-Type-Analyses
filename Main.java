package com.customeranalyses;

public class Main {
    public static void main(String[] args) {
        DataCleaning.readData(); // Veriyi oku
        DataCleaning.fillMissingValues(); // Eksik verileri doldur
        DataCleaning.removeUnnecessaryColumns(); // Gereksiz sÃ¼tunlarÄ± kaldÄ±r
        DataCleaning.calculateAgeAndRemoveYearBirth(); // YaÅŸ hesapla ve Year_Birth sÃ¼tununu sil
        DataCleaning.calculateCustomerSinceDaysAndRemoveDtCustomer(); // MÃ¼ÅŸteri kayÄ±t gÃ¼n sayÄ±sÄ±nÄ± hesapla ve Dt_Customer'Ä± sil
        DataCleaning.convertCategoricalToNumeric(); // Education ve Marital_Status deÄŸiÅŸkenlerini sayÄ±sal hale getir
        DataCleaning.createTotalSpentFeature(); // Yeni "TotalSpent" Ã¶zelliÄŸini oluÅŸtur
        
        // TemizlenmiÅŸ veriyi CustomerSegmentation'a gÃ¶nder
        CustomerSegmentation.loadData(DataCleaning.getCleanedData());

        // Veri Ã¶lÃ§ekleme iÅŸlemini yap
        CustomerSegmentation.scaleFeatures();

        // Ä°ÅŸlenmiÅŸ veriyi tekrar al ve kaydet
        DataCleaning.setCleanedData(CustomerSegmentation.getData());
        DataCleaning.saveCleanedData();

        // ğŸ“Š Elbow Method ile optimum kÃ¼me sayÄ±sÄ±nÄ± bul
        CustomerSegmentation.findOptimalClusters();

        // ğŸ”¥ K-Means KÃ¼meleme iÅŸlemini gerÃ§ekleÅŸtir (K = 6)
        CustomerSegmentation.performClustering(6);

        // SonuÃ§larÄ± kaydet
        DataCleaning.setCleanedData(CustomerSegmentation.getData());
        DataCleaning.saveCleanedData();



        // ğŸ“Š Online alÄ±ÅŸveriÅŸ yapan segmentleri analiz et
        CustomerSegmentation.analyzeOnlineShoppers();
        
     // ğŸ“Š Medeni Durum KÃ¼me Analizi
        CustomerSegmentation.analyzeMaritalStatusInClusters();

        
        // ğŸ“Š DetaylÄ± KÃ¼me Analizini Yap
        CustomerSegmentation.detailedSegmentAnalysis();

        // ğŸ“Š Online alÄ±ÅŸveriÅŸ segmentlerini gÃ¶rselleÅŸtir
        CustomerVisualization.plotOnlineShoppingByCluster();
        CustomerVisualization.plotClusterAverages(CustomerSegmentation.getData());  
        CustomerVisualization.plotMaritalStatusByCluster();

    }
}




	




	




